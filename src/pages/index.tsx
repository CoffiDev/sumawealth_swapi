import { type NextPage, InferGetServerSidePropsType } from "next";
import Head from "next/head";
import Link from "next/link";

import { GetServerSideProps } from 'next'

type People = {
  birth_year: string;
  eye_color: string;
  films: string[];
  gender: string;
  hair_color: string;
  height: string;
  homeworld: string;
  mass: string;
  name: string;
  skin_color: string;
  created: Date;
  edited: Date;
  species: string[];
  starships: string[];
  url: string;
  vehicles: string[];
}

type ResponsePagination<Results> = {
  count: number
  next: string | null
  previous: string | null
  results: Results[]
}

type PeopleResponse = ResponsePagination<People>


export const getServerSideProps: GetServerSideProps<{ data: PeopleResponse }> = async ({query}) => {
  const url = new URL("https://swapi.dev/api/people/")

  if(query.page) {
    url.searchParams.append('page', query.page as string)
  }

  const res = await fetch(url)
  const data: PeopleResponse = await res.json()

  return {
    props: {
      data,
    },
  }
}

const NavigationButton = ({url, label}: {url: string | null, label: string}) => {
  if(!url) {
    return null
  }

  const search = new URL(url).search

  const nextLinkHref = {
    pathname: '/',
    search
  }

  return (
    <Link href={nextLinkHref} className="text-white">
      {label}
    </Link>
  )
}

const Home = ({ data }: InferGetServerSidePropsType<typeof getServerSideProps>) => {

  const p = data.results.map(people => {
    return <div key={people.name} className="text-white">{people.name}</div>
  })

  return (
    <>
      <Head>
        <title>Swapi People</title>
        {/*<meta name="description" content="Generated by create-t3-app" />*/}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-start bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-start gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            <span className="text-[hsl(280,100%,70%)]">SW</span> API
          </h1>

          {p}

          <div className="flex justify-between items-baseline gap-8">
            <NavigationButton url={data.previous} label={'Previous page'}/>

            <NavigationButton url={data.next} label={'Next page'}/>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
